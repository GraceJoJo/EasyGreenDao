package com.jojo.sample.easygreendao.db.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.jojo.sample.easygreendao.db.bean.TagBean;
import com.jojo.sample.easygreendao.db.bean.AuthorBean;
import com.jojo.sample.easygreendao.db.bean.BookEntity;
import com.jojo.sample.easygreendao.db.bean.UserBean;
import com.jojo.sample.easygreendao.db.bean.BookBean;

import com.jojo.sample.easygreendao.db.gen.TagBeanDao;
import com.jojo.sample.easygreendao.db.gen.AuthorBeanDao;
import com.jojo.sample.easygreendao.db.gen.BookEntityDao;
import com.jojo.sample.easygreendao.db.gen.UserBeanDao;
import com.jojo.sample.easygreendao.db.gen.BookBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tagBeanDaoConfig;
    private final DaoConfig authorBeanDaoConfig;
    private final DaoConfig bookEntityDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig bookBeanDaoConfig;

    private final TagBeanDao tagBeanDao;
    private final AuthorBeanDao authorBeanDao;
    private final BookEntityDao bookEntityDao;
    private final UserBeanDao userBeanDao;
    private final BookBeanDao bookBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tagBeanDaoConfig = daoConfigMap.get(TagBeanDao.class).clone();
        tagBeanDaoConfig.initIdentityScope(type);

        authorBeanDaoConfig = daoConfigMap.get(AuthorBeanDao.class).clone();
        authorBeanDaoConfig.initIdentityScope(type);

        bookEntityDaoConfig = daoConfigMap.get(BookEntityDao.class).clone();
        bookEntityDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        bookBeanDaoConfig = daoConfigMap.get(BookBeanDao.class).clone();
        bookBeanDaoConfig.initIdentityScope(type);

        tagBeanDao = new TagBeanDao(tagBeanDaoConfig, this);
        authorBeanDao = new AuthorBeanDao(authorBeanDaoConfig, this);
        bookEntityDao = new BookEntityDao(bookEntityDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        bookBeanDao = new BookBeanDao(bookBeanDaoConfig, this);

        registerDao(TagBean.class, tagBeanDao);
        registerDao(AuthorBean.class, authorBeanDao);
        registerDao(BookEntity.class, bookEntityDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(BookBean.class, bookBeanDao);
    }
    
    public void clear() {
        tagBeanDaoConfig.clearIdentityScope();
        authorBeanDaoConfig.clearIdentityScope();
        bookEntityDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
        bookBeanDaoConfig.clearIdentityScope();
    }

    public TagBeanDao getTagBeanDao() {
        return tagBeanDao;
    }

    public AuthorBeanDao getAuthorBeanDao() {
        return authorBeanDao;
    }

    public BookEntityDao getBookEntityDao() {
        return bookEntityDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public BookBeanDao getBookBeanDao() {
        return bookBeanDao;
    }

}
